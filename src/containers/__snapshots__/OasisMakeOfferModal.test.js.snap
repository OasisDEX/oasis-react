// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Container) OasisMakeOfferModal should render 1`] = `
<Modal
  ariaHideApp={false}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  isOpen={true}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h4>
    Buy offer
  </h4>
  <button
    onClick={[Function]}
  >
    Ã—
  </button>
  <OasisTokenBalance
    className=""
    summary="Available"
    token="DAI"
  />
  <div>
    <Connect(ReduxForm)
      offerMakeType="OFFER_MAKES/MAKE_BUY_OFFER"
    />
    <Connect(WithTransactionWatchWrapper)
      amountReceived="1.00000"
      amountSold="1.00000"
      buyToken="MKR"
      getTransactionGasCostEstimate={[Function]}
      hasSufficientTokenAmount={false}
      isTransactionValid={true}
      offerId={null}
      sellToken="DAI"
      transactionSubectType="TRANSACTIONS/GROUP__OFFERS/OFFER_MAKE"
    />
    <Connect(SetTokenAllowanceTrust)
      allowanceSubjectAddress="0x8cf1cab422a0b6b554077a361f8419cdf122a9f9"
      tokenName="MKR"
    />
    <div>
      <OasisButton
        btnType="button"
        color="default"
        onClick={[Function]}
        size="md"
      >
        Cancel
      </OasisButton>
      <OasisButton
        btnType="button"
        color="default"
        disabled={true}
        onClick={[Function]}
        size="md"
      >
        Buy undefined
      </OasisButton>
    </div>
  </div>
</Modal>
`;

exports[`(Container) OasisMakeOfferModal will receive right actions 1`] = `
Object {
  "actions": Object {
    "getTransactionGasCostEstimate": [Function],
    "makeOffer": [Function],
    "setOfferMakeModalClosed": [Function],
  },
}
`;

exports[`(Container) OasisMakeOfferModal will receive right props 1`] = `
Object {
  "activeOfferMake": Immutable.Map {
    offerData: Immutable.Map {
        payToken: null,
        buyToken: null,
    },
    buyToken: "MKR",
    sellToken: "DAI",
    baseToken: "MKR",
    quoteToken: "DAI",
    sellTokenAddress: "0xc4375b7de8af5a38a93548eb8453a498222c4ff2",
    buyTokenAddress: "0xaaf64bfcc32d0f15873a02163e7e500671a4ffcd",
},
  "buyToken": "MKR",
  "canMakeOffer": false,
  "currentOfferMakeTransaction": undefined,
  "formErrors": Immutable.Map {
},
  "hasSufficientTokenAmount": false,
  "isCurrentOfferActive": false,
  "isCurrentTransactionValid": true,
  "marketAddress": "0x8cf1cab422a0b6b554077a361f8419cdf122a9f9",
  "offerMakeFormValues": Immutable.Map {
    price: "1",
    volume: "1",
    total: "1",
},
  "sellToken": "DAI",
  "userBalances": Immutable.Map {
    DGD: "0",
    GUP: "0",
    W-ETH: "0",
    RHOC: "0",
    DAI: "10000000000000000",
    GNT: "0",
    TIME: "0",
    VSL: "0",
    MLN: "0",
    1ST: "0",
    NMR: "0",
    SNGLS: "0",
    ICN: "0",
    MKR: "0",
    BAT: "0",
    W-GNT: "0",
    PLU: "0",
    SAI: "0",
    REP: "0",
},
}
`;
