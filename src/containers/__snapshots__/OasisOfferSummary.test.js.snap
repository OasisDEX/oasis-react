// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Container) OasisOfferSummary should render 1`] = `
<div>
  <Connect(OasisOrderExceedsGasLimitInfo)
    gasEstimateInfo={
      Immutable.Map {
        isGasEstimatePending: undefined,
        transactionGasCostEstimate: undefined,
        transactionGasCostEstimateError: undefined,
      }
    }
    onTransactionGasBelowLimit={[Function]}
    onTransactionGasLimitExceeded={[Function]}
  />
  <OasisOfferSummary
    amountReceived="N/A"
    amountSold="N/A"
    buyToken="MKR"
    contractsLoaded={true}
    gasEstimateInfo={
      Immutable.Map {
        isGasEstimatePending: undefined,
        transactionGasCostEstimate: undefined,
        transactionGasCostEstimateError: undefined,
      }
    }
    isTokenTradingEnabled={false}
    isVolumeOrPriceEmptyOrZero={false}
    offerType="OFFER_MAKES/MAKE_BUY_OFFER"
    sellToken="W-ETH"
  />
  <OasisInsufficientAmountOfToken
    tokenName="W-ETH"
  />
</div>
`;

exports[`(Container) OasisOfferSummary will receive right actions 1`] = `
Object {
  "actions": Object {},
}
`;

exports[`(Container) OasisOfferSummary will receive right props 1`] = `
Object {
  "contractsLoaded": true,
  "gasEstimateInfo": Immutable.Map {
    isGasEstimatePending: undefined,
    transactionGasCostEstimate: undefined,
    transactionGasCostEstimateError: undefined,
},
  "hasSufficientTokenAmount": false,
  "isTokenTradingEnabled": false,
  "isVolumeOrPriceEmptyOrZero": false,
  "offerBuyAndSellTokens": Immutable.Map {
    buyToken: "MKR",
    sellToken: "DAI",
},
  "offerFormValues": Immutable.Map {
    volume: "1",
    price: "1",
    total: "1",
},
}
`;
